// We can define arbitrary macros here that we can use in constructor calls below
wikipedia=./yago2s/testCases/fromWikipedia.InfoboxExtractor/wikitest.xml
wordnet=/GW/D5data/wordnet/3.0
wordnetdomains = /GW/D5data/wordnetDomains

// Where shall YAGO go?
yagoFolder = /local/suchanek/yagoTest

// Where shall the test version of YAGO go?
testYagoFolder=c:/fabian/temp/test

// Do you want to re-use existing theme files?
reuse=false

// Which extractors do you want to run? (any order)
extractors= fromGeonames.GeoNamesEntityMapper(/GW/D5data/YAGO/geonames/allCountries.txt),
  fromGeonames.GeoNamesClassMapper(/GW/D5data/YAGO/geonames/featureCodes_en.txt),
  fromGeonames.GeoNamesMappedEntityDataImporter(/GW/D5data/YAGO/geonames),  
  fromOtherSources.HardExtractor(./basics2s/data),
  fromOtherSources.PatternHardExtractor(./yago2s/data),
  fromOtherSources.UWNImporter(/GW/D5data/YAGO/uwn4yago/uwn-nouns.tsv),
  fromOtherSources.WordnetDomainExtractor(wordnetdomains),
  fromOtherSources.WordnetExtractor(wordnet), 
  fromThemes.ClassExtractor(),  
  fromThemes.DBpediaLinker(),
  fromThemes.FactExtractor(),  
  fromThemes.LabelExtractor(),
  fromThemes.LiteralFactExtractor(),
  fromThemes.MetaFactExtractor(),
  fromThemes.RelationChecker(),
  fromThemes.RuleExtractor(),    
  fromThemes.SchemaExtractor(),
  fromThemes.SimpleTypeExtractor(),
  fromThemes.SourceExtractor(), 
  fromThemes.StatisticsExtractor(),
  fromThemes.TransitiveTypeExtractor(),
  fromWikipedia.CategoryExtractor(wikipedia),
  fromWikipedia.DisambiguationPageExtractor(wikipedia),
  fromWikipedia.FlightExtractor(wikipedia),
  fromWikipedia.GenderExtractor(wikipedia), 
  fromWikipedia.InfoboxExtractor(wikipedia), 
  fromWikipedia.PersonNameExtractor(),
  fromWikipedia.RedirectExtractor(wikipedia),    
  fromWikipedia.TemporalCategoryExtractor(wikipedia),    
  fromWikipedia.TemporalInfoboxExtractor(wikipedia),
  fromWikipedia.WikipediaLabelExtractor(wikipedia),
  fromWikipedia.WikipediaTypeExtractor(wikipedia),
  fromWikipedia.WikiInfoExtractor(wikipedia)
  
  
