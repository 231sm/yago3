YAGO Policy: Data format
Author: Fabian M. Suchanek

-------------- Format --------------------

The data format of YAGO is RDF/Turtle, as specified here:
 https://www.w3.org/TR/turtle/#sec-grammar-grammar 

-------------- Design Choices --------------------
 
Turtle leaves some design choices open. We make the following conventions:
(1) YAGO entities are always given as relative URIs "<Albert_Einstein>".
This is because qnames may not contain certain characters
(2) All entities from standard namespaces are given as qnames
This is to save space and keep readability.
(3) All other entities are given as full URIs "<http://...>"
(4) The encoding is UTF-8, backslash encodings are used only if necessary,
and \uXXXX encodings are avoided wherever possible.

-------------- Entities --------------------

We use predefined RDF entities wherever possible, in particular 
rdfs:domain, skos:prefLabel, rdfs:range, rdfs:label, rdfs:subClassOf,  
rdfs:subPropertyOf, rdf:type, rdf:Resource, xsd:boolean, rdf:Class, 
xsd:date, xsd:duration, rdf:Statement, xsd:integer, xsd:nonNegativeInteger, 
xsd:decimal, xsd:decimal, rdf:Property, xsd:string, xsd:gYear, owl:Thing

We integrate XML types into the YAGO literal type hierarchy. 
We use YAGO literal types as literal types in RDF.
The root of the taxonomy of individuals (formerly "entity") is owl:Thing.

-------------- N4 --------------------

We extend RDF/Turtle by giving each triple an optional (!) fact id.
This id is given in the line before the fact as a comment of the form
     #@ XXX
where XXX is a valid Turtle id for the following fact.

-------------- Implementation --------------------

Currently, all facts are in this format even inside the running program 
(i.e., inside Fact, FactCollection, etc.).
The implementation has to convert specifically to a Java String
in order to work with real (16-bit) Java strings. This is done by
FactComponent.asJavaString()

All frequent YAGO and RDFS string constants are declared in 
basics.YAGO and basics.RDFS, respectively.